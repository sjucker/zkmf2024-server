/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.daos;

import ch.zkmf2024.server.jooq.generated.tables.HelperRegistration;
import ch.zkmf2024.server.jooq.generated.tables.pojos.HelperRegistrationPojo;
import ch.zkmf2024.server.jooq.generated.tables.records.HelperRegistrationRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class HelperRegistrationDao extends DAOImpl<HelperRegistrationRecord, HelperRegistrationPojo, Long> {

    /**
     * Create a new HelperRegistrationDao without any configuration
     */
    public HelperRegistrationDao() {
        super(HelperRegistration.HELPER_REGISTRATION, HelperRegistrationPojo.class);
    }

    /**
     * Create a new HelperRegistrationDao with an attached configuration
     */
    public HelperRegistrationDao(Configuration configuration) {
        super(HelperRegistration.HELPER_REGISTRATION, HelperRegistrationPojo.class, configuration);
    }

    @Override
    public Long getId(HelperRegistrationPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchById(Long... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public HelperRegistrationPojo fetchOneById(Long value) {
        return fetchOne(HelperRegistration.HELPER_REGISTRATION.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<HelperRegistrationPojo> fetchOptionalById(Long value) {
        return fetchOptional(HelperRegistration.HELPER_REGISTRATION.ID, value);
    }

    /**
     * Fetch records that have <code>vorname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfVorname(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.VORNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>vorname IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByVorname(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.VORNAME, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByName(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.NAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByEmail(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public HelperRegistrationPojo fetchOneByEmail(String value) {
        return fetchOne(HelperRegistration.HELPER_REGISTRATION.EMAIL, value);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public Optional<HelperRegistrationPojo> fetchOptionalByEmail(String value) {
        return fetchOptional(HelperRegistration.HELPER_REGISTRATION.EMAIL, value);
    }

    /**
     * Fetch records that have <code>telefon BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfTelefon(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.TELEFON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>telefon IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByTelefon(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.TELEFON, values);
    }

    /**
     * Fetch records that have <code>comment BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfComment(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.COMMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comment IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByComment(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.COMMENT, values);
    }

    /**
     * Fetch records that have <code>adresse BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfAdresse(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.ADRESSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>adresse IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByAdresse(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.ADRESSE, values);
    }

    /**
     * Fetch records that have <code>plz_ort BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfPlzOrt(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.PLZ_ORT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>plz_ort IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByPlzOrt(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.PLZ_ORT, values);
    }

    /**
     * Fetch records that have <code>geburtsdatum BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfGeburtsdatum(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.GEBURTSDATUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>geburtsdatum IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByGeburtsdatum(LocalDate... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.GEBURTSDATUM, values);
    }

    /**
     * Fetch records that have <code>vereinszugehoerigkeit BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfVereinszugehoerigkeit(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.VEREINSZUGEHOERIGKEIT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>vereinszugehoerigkeit IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByVereinszugehoerigkeit(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.VEREINSZUGEHOERIGKEIT, values);
    }

    /**
     * Fetch records that have <code>aufgaben BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfAufgaben(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.AUFGABEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>aufgaben IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByAufgaben(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.AUFGABEN, values);
    }

    /**
     * Fetch records that have <code>anzahl_einsaetze BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfAnzahlEinsaetze(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.ANZAHL_EINSAETZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>anzahl_einsaetze IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByAnzahlEinsaetze(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.ANZAHL_EINSAETZE, values);
    }

    /**
     * Fetch records that have <code>einsatz_mittwoch BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfEinsatzMittwoch(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.EINSATZ_MITTWOCH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>einsatz_mittwoch IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByEinsatzMittwoch(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.EINSATZ_MITTWOCH, values);
    }

    /**
     * Fetch records that have <code>einsatz_donnerstag BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfEinsatzDonnerstag(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.EINSATZ_DONNERSTAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>einsatz_donnerstag IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByEinsatzDonnerstag(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.EINSATZ_DONNERSTAG, values);
    }

    /**
     * Fetch records that have <code>einsatz_freitag BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfEinsatzFreitag(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.EINSATZ_FREITAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>einsatz_freitag IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByEinsatzFreitag(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.EINSATZ_FREITAG, values);
    }

    /**
     * Fetch records that have <code>einsatz_samstag BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfEinsatzSamstag(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.EINSATZ_SAMSTAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>einsatz_samstag IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByEinsatzSamstag(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.EINSATZ_SAMSTAG, values);
    }

    /**
     * Fetch records that have <code>einsatz_sonntag BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfEinsatzSonntag(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.EINSATZ_SONNTAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>einsatz_sonntag IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByEinsatzSonntag(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.EINSATZ_SONNTAG, values);
    }

    /**
     * Fetch records that have <code>einsatz_montag BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfEinsatzMontag(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.EINSATZ_MONTAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>einsatz_montag IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByEinsatzMontag(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.EINSATZ_MONTAG, values);
    }

    /**
     * Fetch records that have <code>einsatz_dienstag BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfEinsatzDienstag(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.EINSATZ_DIENSTAG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>einsatz_dienstag IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByEinsatzDienstag(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.EINSATZ_DIENSTAG, values);
    }

    /**
     * Fetch records that have <code>groesse_shirt BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfGroesseShirt(String lowerInclusive, String upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.GROESSE_SHIRT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>groesse_shirt IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByGroesseShirt(String... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.GROESSE_SHIRT, values);
    }

    /**
     * Fetch records that have <code>registered_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<HelperRegistrationPojo> fetchRangeOfRegisteredAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(HelperRegistration.HELPER_REGISTRATION.REGISTERED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>registered_at IN (values)</code>
     */
    public List<HelperRegistrationPojo> fetchByRegisteredAt(LocalDateTime... values) {
        return fetch(HelperRegistration.HELPER_REGISTRATION.REGISTERED_AT, values);
    }
}
