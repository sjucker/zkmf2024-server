/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.records;

import ch.zkmf2024.server.jooq.generated.enums.LocationLocationType;
import ch.zkmf2024.server.jooq.generated.tables.Location;
import ch.zkmf2024.server.jooq.generated.tables.interfaces.ILocation;
import ch.zkmf2024.server.jooq.generated.tables.pojos.LocationPojo;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.math.BigDecimal;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class LocationRecord extends UpdatableRecordImpl<LocationRecord> implements ILocation {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>location.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>location.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>location.name</code>.
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>location.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>location.address</code>.
     */
    @Override
    public void setAddress(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>location.address</code>.
     */
    @Override
    public String getAddress() {
        return (String) get(2);
    }

    /**
     * Setter for <code>location.latitude</code>.
     */
    @Override
    public void setLatitude(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>location.latitude</code>.
     */
    @Override
    public BigDecimal getLatitude() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>location.longitude</code>.
     */
    @Override
    public void setLongitude(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>location.longitude</code>.
     */
    @Override
    public BigDecimal getLongitude() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>location.location_type</code>.
     */
    @Override
    public void setLocationType(LocationLocationType value) {
        set(5, value);
    }

    /**
     * Getter for <code>location.location_type</code>.
     */
    @Override
    public LocationLocationType getLocationType() {
        return (LocationLocationType) get(5);
    }

    /**
     * Setter for <code>location.capacity</code>.
     */
    @Override
    public void setCapacity(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>location.capacity</code>.
     */
    @Override
    public String getCapacity() {
        return (String) get(6);
    }

    /**
     * Setter for <code>location.modules</code>.
     */
    @Override
    public void setModules(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>location.modules</code>.
     */
    @Override
    public String getModules() {
        return (String) get(7);
    }

    /**
     * Setter for <code>location.einspiellokal_id</code>.
     */
    @Override
    public void setEinspiellokalId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>location.einspiellokal_id</code>.
     */
    @Override
    public Long getEinspiellokalId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>location.instrumentendepot_id</code>.
     */
    @Override
    public void setInstrumentendepotId(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>location.instrumentendepot_id</code>.
     */
    @Override
    public Long getInstrumentendepotId() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>location.juryfeedback_id</code>.
     */
    @Override
    public void setJuryfeedbackId(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>location.juryfeedback_id</code>.
     */
    @Override
    public Long getJuryfeedbackId() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>location.sort_order</code>.
     */
    @Override
    public void setSortOrder(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>location.sort_order</code>.
     */
    @Override
    public Integer getSortOrder() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>location.identifier</code>.
     */
    @Override
    public void setIdentifier(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>location.identifier</code>.
     */
    @Override
    public String getIdentifier() {
        return (String) get(12);
    }

    /**
     * Setter for <code>location.cloudflare_id</code>.
     */
    @Override
    public void setCloudflareId(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>location.cloudflare_id</code>.
     */
    @Override
    public String getCloudflareId() {
        return (String) get(13);
    }

    /**
     * Setter for <code>location.kuula_id</code>.
     */
    @Override
    public void setKuulaId(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>location.kuula_id</code>.
     */
    @Override
    public String getKuulaId() {
        return (String) get(14);
    }

    /**
     * Setter for <code>location.percussion_equipment</code>.
     */
    @Override
    public void setPercussionEquipment(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>location.percussion_equipment</code>.
     */
    @Override
    public String getPercussionEquipment() {
        return (String) get(15);
    }

    /**
     * Setter for <code>location.map_id</code>.
     */
    @Override
    public void setMapId(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>location.map_id</code>.
     */
    @Override
    public String getMapId() {
        return (String) get(16);
    }

    /**
     * Setter for <code>location.instrumentendepot_parademusik_id</code>.
     */
    @Override
    public void setInstrumentendepotParademusikId(Long value) {
        set(17, value);
    }

    /**
     * Getter for <code>location.instrumentendepot_parademusik_id</code>.
     */
    @Override
    public Long getInstrumentendepotParademusikId() {
        return (Long) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ILocation from) {
        setId(from.getId());
        setName(from.getName());
        setAddress(from.getAddress());
        setLatitude(from.getLatitude());
        setLongitude(from.getLongitude());
        setLocationType(from.getLocationType());
        setCapacity(from.getCapacity());
        setModules(from.getModules());
        setEinspiellokalId(from.getEinspiellokalId());
        setInstrumentendepotId(from.getInstrumentendepotId());
        setJuryfeedbackId(from.getJuryfeedbackId());
        setSortOrder(from.getSortOrder());
        setIdentifier(from.getIdentifier());
        setCloudflareId(from.getCloudflareId());
        setKuulaId(from.getKuulaId());
        setPercussionEquipment(from.getPercussionEquipment());
        setMapId(from.getMapId());
        setInstrumentendepotParademusikId(from.getInstrumentendepotParademusikId());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends ILocation> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LocationRecord
     */
    public LocationRecord() {
        super(Location.LOCATION);
    }

    /**
     * Create a detached, initialised LocationRecord
     */
    public LocationRecord(Long id, String name, String address, BigDecimal latitude, BigDecimal longitude, LocationLocationType locationType, String capacity, String modules, Long einspiellokalId, Long instrumentendepotId, Long juryfeedbackId, Integer sortOrder, String identifier, String cloudflareId, String kuulaId, String percussionEquipment, String mapId, Long instrumentendepotParademusikId) {
        super(Location.LOCATION);

        setId(id);
        setName(name);
        setAddress(address);
        setLatitude(latitude);
        setLongitude(longitude);
        setLocationType(locationType);
        setCapacity(capacity);
        setModules(modules);
        setEinspiellokalId(einspiellokalId);
        setInstrumentendepotId(instrumentendepotId);
        setJuryfeedbackId(juryfeedbackId);
        setSortOrder(sortOrder);
        setIdentifier(identifier);
        setCloudflareId(cloudflareId);
        setKuulaId(kuulaId);
        setPercussionEquipment(percussionEquipment);
        setMapId(mapId);
        setInstrumentendepotParademusikId(instrumentendepotParademusikId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LocationRecord
     */
    public LocationRecord(LocationPojo value) {
        super(Location.LOCATION);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setAddress(value.getAddress());
            setLatitude(value.getLatitude());
            setLongitude(value.getLongitude());
            setLocationType(value.getLocationType());
            setCapacity(value.getCapacity());
            setModules(value.getModules());
            setEinspiellokalId(value.getEinspiellokalId());
            setInstrumentendepotId(value.getInstrumentendepotId());
            setJuryfeedbackId(value.getJuryfeedbackId());
            setSortOrder(value.getSortOrder());
            setIdentifier(value.getIdentifier());
            setCloudflareId(value.getCloudflareId());
            setKuulaId(value.getKuulaId());
            setPercussionEquipment(value.getPercussionEquipment());
            setMapId(value.getMapId());
            setInstrumentendepotParademusikId(value.getInstrumentendepotParademusikId());
            resetChangedOnNotNull();
        }
    }
}
