/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.pojos;

import ch.zkmf2024.server.jooq.generated.tables.interfaces.ICurrentlyPlaying;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class CurrentlyPlayingPojo implements ICurrentlyPlaying {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long fkTimetableEntry;
    private LocalDateTime startedAt;
    private LocalDateTime endedAt;

    public CurrentlyPlayingPojo() {
    }

    public CurrentlyPlayingPojo(ICurrentlyPlaying value) {
        this.id = value.getId();
        this.fkTimetableEntry = value.getFkTimetableEntry();
        this.startedAt = value.getStartedAt();
        this.endedAt = value.getEndedAt();
    }

    public CurrentlyPlayingPojo(
            Long id,
            Long fkTimetableEntry,
            LocalDateTime startedAt,
            LocalDateTime endedAt
    ) {
        this.id = id;
        this.fkTimetableEntry = fkTimetableEntry;
        this.startedAt = startedAt;
        this.endedAt = endedAt;
    }

    /**
     * Getter for <code>currently_playing.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>currently_playing.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>currently_playing.fk_timetable_entry</code>.
     */
    @Override
    public Long getFkTimetableEntry() {
        return this.fkTimetableEntry;
    }

    /**
     * Setter for <code>currently_playing.fk_timetable_entry</code>.
     */
    @Override
    public void setFkTimetableEntry(Long fkTimetableEntry) {
        this.fkTimetableEntry = fkTimetableEntry;
    }

    /**
     * Getter for <code>currently_playing.started_at</code>.
     */
    @Override
    public LocalDateTime getStartedAt() {
        return this.startedAt;
    }

    /**
     * Setter for <code>currently_playing.started_at</code>.
     */
    @Override
    public void setStartedAt(LocalDateTime startedAt) {
        this.startedAt = startedAt;
    }

    /**
     * Getter for <code>currently_playing.ended_at</code>.
     */
    @Override
    public LocalDateTime getEndedAt() {
        return this.endedAt;
    }

    /**
     * Setter for <code>currently_playing.ended_at</code>.
     */
    @Override
    public void setEndedAt(LocalDateTime endedAt) {
        this.endedAt = endedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CurrentlyPlayingPojo other = (CurrentlyPlayingPojo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        } else if (!this.id.equals(other.id))
            return false;
        if (this.fkTimetableEntry == null) {
            if (other.fkTimetableEntry != null)
                return false;
        } else if (!this.fkTimetableEntry.equals(other.fkTimetableEntry))
            return false;
        if (this.startedAt == null) {
            if (other.startedAt != null)
                return false;
        } else if (!this.startedAt.equals(other.startedAt))
            return false;
        if (this.endedAt == null) {
            if (other.endedAt != null)
                return false;
        } else if (!this.endedAt.equals(other.endedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.fkTimetableEntry == null) ? 0 : this.fkTimetableEntry.hashCode());
        result = prime * result + ((this.startedAt == null) ? 0 : this.startedAt.hashCode());
        result = prime * result + ((this.endedAt == null) ? 0 : this.endedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CurrentlyPlayingPojo (");

        sb.append(id);
        sb.append(", ").append(fkTimetableEntry);
        sb.append(", ").append(startedAt);
        sb.append(", ").append(endedAt);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ICurrentlyPlaying from) {
        setId(from.getId());
        setFkTimetableEntry(from.getFkTimetableEntry());
        setStartedAt(from.getStartedAt());
        setEndedAt(from.getEndedAt());
    }

    @Override
    public <E extends ICurrentlyPlaying> E into(E into) {
        into.from(this);
        return into;
    }
}
