/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.daos;

import ch.zkmf2024.server.jooq.generated.tables.NotificationSent;
import ch.zkmf2024.server.jooq.generated.tables.pojos.NotificationSentPojo;
import ch.zkmf2024.server.jooq.generated.tables.records.NotificationSentRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class NotificationSentDao extends DAOImpl<NotificationSentRecord, NotificationSentPojo, String> {

    /**
     * Create a new NotificationSentDao without any configuration
     */
    public NotificationSentDao() {
        super(NotificationSent.NOTIFICATION_SENT, NotificationSentPojo.class);
    }

    /**
     * Create a new NotificationSentDao with an attached configuration
     */
    public NotificationSentDao(Configuration configuration) {
        super(NotificationSent.NOTIFICATION_SENT, NotificationSentPojo.class, configuration);
    }

    @Override
    public String getId(NotificationSentPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<NotificationSentPojo> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(NotificationSent.NOTIFICATION_SENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<NotificationSentPojo> fetchById(String... values) {
        return fetch(NotificationSent.NOTIFICATION_SENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public NotificationSentPojo fetchOneById(String value) {
        return fetchOne(NotificationSent.NOTIFICATION_SENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<NotificationSentPojo> fetchOptionalById(String value) {
        return fetchOptional(NotificationSent.NOTIFICATION_SENT.ID, value);
    }

    /**
     * Fetch records that have <code>sent_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<NotificationSentPojo> fetchRangeOfSentAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(NotificationSent.NOTIFICATION_SENT.SENT_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sent_at IN (values)</code>
     */
    public List<NotificationSentPojo> fetchBySentAt(LocalDateTime... values) {
        return fetch(NotificationSent.NOTIFICATION_SENT.SENT_AT, values);
    }
}
