/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.records;

import ch.zkmf2024.server.jooq.generated.tables.Zkmf2024User;
import ch.zkmf2024.server.jooq.generated.tables.interfaces.IZkmf2024User;
import ch.zkmf2024.server.jooq.generated.tables.pojos.Zkmf2024UserPojo;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Zkmf2024UserRecord extends UpdatableRecordImpl<Zkmf2024UserRecord> implements IZkmf2024User {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>zkmf2024_user.email</code>.
     */
    @Override
    public void setEmail(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>zkmf2024_user.email</code>.
     */
    @Override
    public String getEmail() {
        return (String) get(0);
    }

    /**
     * Setter for <code>zkmf2024_user.role</code>.
     */
    @Override
    public void setRole(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zkmf2024_user.role</code>.
     */
    @Override
    public String getRole() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zkmf2024_user.password</code>.
     */
    @Override
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>zkmf2024_user.password</code>.
     */
    @Override
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>zkmf2024_user.last_login</code>.
     */
    @Override
    public void setLastLogin(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>zkmf2024_user.last_login</code>.
     */
    @Override
    public LocalDateTime getLastLogin() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>zkmf2024_user.created_at</code>.
     */
    @Override
    public void setCreatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>zkmf2024_user.created_at</code>.
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>zkmf2024_user.email_verification</code>.
     */
    @Override
    public void setEmailVerification(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>zkmf2024_user.email_verification</code>.
     */
    @Override
    public String getEmailVerification() {
        return (String) get(5);
    }

    /**
     * Setter for <code>zkmf2024_user.email_verified_at</code>.
     */
    @Override
    public void setEmailVerifiedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>zkmf2024_user.email_verified_at</code>.
     */
    @Override
    public LocalDateTime getEmailVerifiedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>zkmf2024_user.password_reset_token</code>.
     */
    @Override
    public void setPasswordResetToken(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>zkmf2024_user.password_reset_token</code>.
     */
    @Override
    public String getPasswordResetToken() {
        return (String) get(7);
    }

    /**
     * Setter for <code>zkmf2024_user.superuser</code>.
     */
    @Override
    public void setSuperuser(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>zkmf2024_user.superuser</code>.
     */
    @Override
    public Boolean getSuperuser() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IZkmf2024User from) {
        setEmail(from.getEmail());
        setRole(from.getRole());
        setPassword(from.getPassword());
        setLastLogin(from.getLastLogin());
        setCreatedAt(from.getCreatedAt());
        setEmailVerification(from.getEmailVerification());
        setEmailVerifiedAt(from.getEmailVerifiedAt());
        setPasswordResetToken(from.getPasswordResetToken());
        setSuperuser(from.getSuperuser());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IZkmf2024User> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Zkmf2024UserRecord
     */
    public Zkmf2024UserRecord() {
        super(Zkmf2024User.ZKMF2024_USER);
    }

    /**
     * Create a detached, initialised Zkmf2024UserRecord
     */
    public Zkmf2024UserRecord(String email, String role, String password, LocalDateTime lastLogin, LocalDateTime createdAt, String emailVerification, LocalDateTime emailVerifiedAt, String passwordResetToken, Boolean superuser) {
        super(Zkmf2024User.ZKMF2024_USER);

        setEmail(email);
        setRole(role);
        setPassword(password);
        setLastLogin(lastLogin);
        setCreatedAt(createdAt);
        setEmailVerification(emailVerification);
        setEmailVerifiedAt(emailVerifiedAt);
        setPasswordResetToken(passwordResetToken);
        setSuperuser(superuser);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised Zkmf2024UserRecord
     */
    public Zkmf2024UserRecord(Zkmf2024UserPojo value) {
        super(Zkmf2024User.ZKMF2024_USER);

        if (value != null) {
            setEmail(value.getEmail());
            setRole(value.getRole());
            setPassword(value.getPassword());
            setLastLogin(value.getLastLogin());
            setCreatedAt(value.getCreatedAt());
            setEmailVerification(value.getEmailVerification());
            setEmailVerifiedAt(value.getEmailVerifiedAt());
            setPasswordResetToken(value.getPasswordResetToken());
            setSuperuser(value.getSuperuser());
            resetChangedOnNotNull();
        }
    }
}
