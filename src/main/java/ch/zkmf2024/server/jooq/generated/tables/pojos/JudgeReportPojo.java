/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.pojos;

import ch.zkmf2024.server.jooq.generated.tables.interfaces.IJudgeReport;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class JudgeReportPojo implements IJudgeReport {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long fkJudge;
    private Long fkTimetableEntry;
    private Integer score;
    private String status;
    private LocalDateTime finishedAt;

    public JudgeReportPojo() {
    }

    public JudgeReportPojo(IJudgeReport value) {
        this.id = value.getId();
        this.fkJudge = value.getFkJudge();
        this.fkTimetableEntry = value.getFkTimetableEntry();
        this.score = value.getScore();
        this.status = value.getStatus();
        this.finishedAt = value.getFinishedAt();
    }

    public JudgeReportPojo(
            Long id,
            Long fkJudge,
            Long fkTimetableEntry,
            Integer score,
            String status,
            LocalDateTime finishedAt
    ) {
        this.id = id;
        this.fkJudge = fkJudge;
        this.fkTimetableEntry = fkTimetableEntry;
        this.score = score;
        this.status = status;
        this.finishedAt = finishedAt;
    }

    /**
     * Getter for <code>judge_report.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>judge_report.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>judge_report.fk_judge</code>.
     */
    @Override
    public Long getFkJudge() {
        return this.fkJudge;
    }

    /**
     * Setter for <code>judge_report.fk_judge</code>.
     */
    @Override
    public void setFkJudge(Long fkJudge) {
        this.fkJudge = fkJudge;
    }

    /**
     * Getter for <code>judge_report.fk_timetable_entry</code>.
     */
    @Override
    public Long getFkTimetableEntry() {
        return this.fkTimetableEntry;
    }

    /**
     * Setter for <code>judge_report.fk_timetable_entry</code>.
     */
    @Override
    public void setFkTimetableEntry(Long fkTimetableEntry) {
        this.fkTimetableEntry = fkTimetableEntry;
    }

    /**
     * Getter for <code>judge_report.score</code>.
     */
    @Override
    public Integer getScore() {
        return this.score;
    }

    /**
     * Setter for <code>judge_report.score</code>.
     */
    @Override
    public void setScore(Integer score) {
        this.score = score;
    }

    /**
     * Getter for <code>judge_report.status</code>.
     */
    @Override
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>judge_report.status</code>.
     */
    @Override
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for <code>judge_report.finished_at</code>.
     */
    @Override
    public LocalDateTime getFinishedAt() {
        return this.finishedAt;
    }

    /**
     * Setter for <code>judge_report.finished_at</code>.
     */
    @Override
    public void setFinishedAt(LocalDateTime finishedAt) {
        this.finishedAt = finishedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JudgeReportPojo other = (JudgeReportPojo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        } else if (!this.id.equals(other.id))
            return false;
        if (this.fkJudge == null) {
            if (other.fkJudge != null)
                return false;
        } else if (!this.fkJudge.equals(other.fkJudge))
            return false;
        if (this.fkTimetableEntry == null) {
            if (other.fkTimetableEntry != null)
                return false;
        } else if (!this.fkTimetableEntry.equals(other.fkTimetableEntry))
            return false;
        if (this.score == null) {
            if (other.score != null)
                return false;
        } else if (!this.score.equals(other.score))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        } else if (!this.status.equals(other.status))
            return false;
        if (this.finishedAt == null) {
            if (other.finishedAt != null)
                return false;
        } else if (!this.finishedAt.equals(other.finishedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.fkJudge == null) ? 0 : this.fkJudge.hashCode());
        result = prime * result + ((this.fkTimetableEntry == null) ? 0 : this.fkTimetableEntry.hashCode());
        result = prime * result + ((this.score == null) ? 0 : this.score.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.finishedAt == null) ? 0 : this.finishedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JudgeReportPojo (");

        sb.append(id);
        sb.append(", ").append(fkJudge);
        sb.append(", ").append(fkTimetableEntry);
        sb.append(", ").append(score);
        sb.append(", ").append(status);
        sb.append(", ").append(finishedAt);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IJudgeReport from) {
        setId(from.getId());
        setFkJudge(from.getFkJudge());
        setFkTimetableEntry(from.getFkTimetableEntry());
        setScore(from.getScore());
        setStatus(from.getStatus());
        setFinishedAt(from.getFinishedAt());
    }

    @Override
    public <E extends IJudgeReport> E into(E into) {
        into.from(this);
        return into;
    }
}
