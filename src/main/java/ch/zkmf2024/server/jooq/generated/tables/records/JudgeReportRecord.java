/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.records;

import ch.zkmf2024.server.jooq.generated.tables.JudgeReport;
import ch.zkmf2024.server.jooq.generated.tables.interfaces.IJudgeReport;
import ch.zkmf2024.server.jooq.generated.tables.pojos.JudgeReportPojo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class JudgeReportRecord extends UpdatableRecordImpl<JudgeReportRecord> implements Record7<Long, Long, Long, Integer, String, LocalDateTime, Boolean>, IJudgeReport {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>judge_report.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>judge_report.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>judge_report.fk_judge</code>.
     */
    @Override
    public void setFkJudge(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>judge_report.fk_judge</code>.
     */
    @Override
    public Long getFkJudge() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>judge_report.fk_timetable_entry</code>.
     */
    @Override
    public void setFkTimetableEntry(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>judge_report.fk_timetable_entry</code>.
     */
    @Override
    public Long getFkTimetableEntry() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>judge_report.score</code>.
     */
    @Override
    public void setScore(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>judge_report.score</code>.
     */
    @Override
    public Integer getScore() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>judge_report.status</code>.
     */
    @Override
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>judge_report.status</code>.
     */
    @Override
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>judge_report.finished_at</code>.
     */
    @Override
    public void setFinishedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>judge_report.finished_at</code>.
     */
    @Override
    public LocalDateTime getFinishedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>judge_report.rating_fixed</code>.
     */
    @Override
    public void setRatingFixed(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>judge_report.rating_fixed</code>.
     */
    @Override
    public Boolean getRatingFixed() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, Integer, String, LocalDateTime, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, Long, Integer, String, LocalDateTime, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return JudgeReport.JUDGE_REPORT.ID;
    }

    @Override
    public Field<Long> field2() {
        return JudgeReport.JUDGE_REPORT.FK_JUDGE;
    }

    @Override
    public Field<Long> field3() {
        return JudgeReport.JUDGE_REPORT.FK_TIMETABLE_ENTRY;
    }

    @Override
    public Field<Integer> field4() {
        return JudgeReport.JUDGE_REPORT.SCORE;
    }

    @Override
    public Field<String> field5() {
        return JudgeReport.JUDGE_REPORT.STATUS;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return JudgeReport.JUDGE_REPORT.FINISHED_AT;
    }

    @Override
    public Field<Boolean> field7() {
        return JudgeReport.JUDGE_REPORT.RATING_FIXED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getFkJudge();
    }

    @Override
    public Long component3() {
        return getFkTimetableEntry();
    }

    @Override
    public Integer component4() {
        return getScore();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public LocalDateTime component6() {
        return getFinishedAt();
    }

    @Override
    public Boolean component7() {
        return getRatingFixed();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getFkJudge();
    }

    @Override
    public Long value3() {
        return getFkTimetableEntry();
    }

    @Override
    public Integer value4() {
        return getScore();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public LocalDateTime value6() {
        return getFinishedAt();
    }

    @Override
    public Boolean value7() {
        return getRatingFixed();
    }

    @Override
    public JudgeReportRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public JudgeReportRecord value2(Long value) {
        setFkJudge(value);
        return this;
    }

    @Override
    public JudgeReportRecord value3(Long value) {
        setFkTimetableEntry(value);
        return this;
    }

    @Override
    public JudgeReportRecord value4(Integer value) {
        setScore(value);
        return this;
    }

    @Override
    public JudgeReportRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public JudgeReportRecord value6(LocalDateTime value) {
        setFinishedAt(value);
        return this;
    }

    @Override
    public JudgeReportRecord value7(Boolean value) {
        setRatingFixed(value);
        return this;
    }

    @Override
    public JudgeReportRecord values(Long value1, Long value2, Long value3, Integer value4, String value5, LocalDateTime value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IJudgeReport from) {
        setId(from.getId());
        setFkJudge(from.getFkJudge());
        setFkTimetableEntry(from.getFkTimetableEntry());
        setScore(from.getScore());
        setStatus(from.getStatus());
        setFinishedAt(from.getFinishedAt());
        setRatingFixed(from.getRatingFixed());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IJudgeReport> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JudgeReportRecord
     */
    public JudgeReportRecord() {
        super(JudgeReport.JUDGE_REPORT);
    }

    /**
     * Create a detached, initialised JudgeReportRecord
     */
    public JudgeReportRecord(Long id, Long fkJudge, Long fkTimetableEntry, Integer score, String status, LocalDateTime finishedAt, Boolean ratingFixed) {
        super(JudgeReport.JUDGE_REPORT);

        setId(id);
        setFkJudge(fkJudge);
        setFkTimetableEntry(fkTimetableEntry);
        setScore(score);
        setStatus(status);
        setFinishedAt(finishedAt);
        setRatingFixed(ratingFixed);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised JudgeReportRecord
     */
    public JudgeReportRecord(JudgeReportPojo value) {
        super(JudgeReport.JUDGE_REPORT);

        if (value != null) {
            setId(value.getId());
            setFkJudge(value.getFkJudge());
            setFkTimetableEntry(value.getFkTimetableEntry());
            setScore(value.getScore());
            setStatus(value.getStatus());
            setFinishedAt(value.getFinishedAt());
            setRatingFixed(value.getRatingFixed());
            resetChangedOnNotNull();
        }
    }
}
