/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated;

import ch.zkmf2024.server.jooq.generated.tables.HelperRegistration;
import ch.zkmf2024.server.jooq.generated.tables.Image;
import ch.zkmf2024.server.jooq.generated.tables.Kontakt;
import ch.zkmf2024.server.jooq.generated.tables.NewsletterRecipient;
import ch.zkmf2024.server.jooq.generated.tables.SurveyAnswer;
import ch.zkmf2024.server.jooq.generated.tables.User;
import ch.zkmf2024.server.jooq.generated.tables.Verein;
import ch.zkmf2024.server.jooq.generated.tables.VereinStatus;
import ch.zkmf2024.server.jooq.generated.tables.records.HelperRegistrationRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.ImageRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.KontaktRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.NewsletterRecipientRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.SurveyAnswerRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.UserRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.VereinRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.VereinStatusRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<HelperRegistrationRecord> KEY_HELPER_REGISTRATION_EMAIL = Internal.createUniqueKey(HelperRegistration.HELPER_REGISTRATION, DSL.name("KEY_helper_registration_email"), new TableField[]{HelperRegistration.HELPER_REGISTRATION.EMAIL}, true);
    public static final UniqueKey<HelperRegistrationRecord> KEY_HELPER_REGISTRATION_PRIMARY = Internal.createUniqueKey(HelperRegistration.HELPER_REGISTRATION, DSL.name("KEY_helper_registration_PRIMARY"), new TableField[]{HelperRegistration.HELPER_REGISTRATION.ID}, true);
    public static final UniqueKey<ImageRecord> KEY_IMAGE_PRIMARY = Internal.createUniqueKey(Image.IMAGE, DSL.name("KEY_image_PRIMARY"), new TableField[]{Image.IMAGE.ID}, true);
    public static final UniqueKey<KontaktRecord> KEY_KONTAKT_PRIMARY = Internal.createUniqueKey(Kontakt.KONTAKT, DSL.name("KEY_kontakt_PRIMARY"), new TableField[]{Kontakt.KONTAKT.ID}, true);
    public static final UniqueKey<NewsletterRecipientRecord> KEY_NEWSLETTER_RECIPIENT_PRIMARY = Internal.createUniqueKey(NewsletterRecipient.NEWSLETTER_RECIPIENT, DSL.name("KEY_newsletter_recipient_PRIMARY"), new TableField[]{NewsletterRecipient.NEWSLETTER_RECIPIENT.EMAIL}, true);
    public static final UniqueKey<SurveyAnswerRecord> KEY_SURVEY_ANSWER_PRIMARY = Internal.createUniqueKey(SurveyAnswer.SURVEY_ANSWER, DSL.name("KEY_survey_answer_PRIMARY"), new TableField[]{SurveyAnswer.SURVEY_ANSWER.ID}, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[]{User.USER.EMAIL}, true);
    public static final UniqueKey<VereinRecord> KEY_VEREIN_PRIMARY = Internal.createUniqueKey(Verein.VEREIN, DSL.name("KEY_verein_PRIMARY"), new TableField[]{Verein.VEREIN.ID}, true);
    public static final UniqueKey<VereinStatusRecord> KEY_VEREIN_STATUS_PRIMARY = Internal.createUniqueKey(VereinStatus.VEREIN_STATUS, DSL.name("KEY_verein_status_PRIMARY"), new TableField[]{VereinStatus.VEREIN_STATUS.FK_VEREIN}, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<VereinRecord, KontaktRecord> FK_VEREIN_ON_DIREKTION_KONTAKT = Internal.createForeignKey(Verein.VEREIN, DSL.name("FK_VEREIN_ON_DIREKTION_KONTAKT"), new TableField[]{Verein.VEREIN.DIREKTION_KONTAKT_ID}, Keys.KEY_KONTAKT_PRIMARY, new TableField[]{Kontakt.KONTAKT.ID}, true);
    public static final ForeignKey<VereinRecord, KontaktRecord> FK_VEREIN_ON_PRAESIDENT_KONTAKT = Internal.createForeignKey(Verein.VEREIN, DSL.name("FK_VEREIN_ON_PRAESIDENT_KONTAKT"), new TableField[]{Verein.VEREIN.PRAESIDENT_KONTAKT_ID}, Keys.KEY_KONTAKT_PRIMARY, new TableField[]{Kontakt.KONTAKT.ID}, true);
    public static final ForeignKey<VereinStatusRecord, VereinRecord> VEREIN_STATUS_IBFK_1 = Internal.createForeignKey(VereinStatus.VEREIN_STATUS, DSL.name("verein_status_ibfk_1"), new TableField[]{VereinStatus.VEREIN_STATUS.FK_VEREIN}, Keys.KEY_VEREIN_PRIMARY, new TableField[]{Verein.VEREIN.ID}, true);
}
