/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated;

import ch.zkmf2024.server.jooq.generated.tables.HelperRegistration;
import ch.zkmf2024.server.jooq.generated.tables.Image;
import ch.zkmf2024.server.jooq.generated.tables.Judge;
import ch.zkmf2024.server.jooq.generated.tables.JudgeReport;
import ch.zkmf2024.server.jooq.generated.tables.JudgeReportComment;
import ch.zkmf2024.server.jooq.generated.tables.JudgeReportRating;
import ch.zkmf2024.server.jooq.generated.tables.Kontakt;
import ch.zkmf2024.server.jooq.generated.tables.Location;
import ch.zkmf2024.server.jooq.generated.tables.NewsletterRecipient;
import ch.zkmf2024.server.jooq.generated.tables.ProgrammVorgaben;
import ch.zkmf2024.server.jooq.generated.tables.SurveyAnswer;
import ch.zkmf2024.server.jooq.generated.tables.TimetableEntry;
import ch.zkmf2024.server.jooq.generated.tables.Titel;
import ch.zkmf2024.server.jooq.generated.tables.Verein;
import ch.zkmf2024.server.jooq.generated.tables.VereinComment;
import ch.zkmf2024.server.jooq.generated.tables.VereinDoppeleinsatz;
import ch.zkmf2024.server.jooq.generated.tables.VereinProgramm;
import ch.zkmf2024.server.jooq.generated.tables.VereinProgrammTitel;
import ch.zkmf2024.server.jooq.generated.tables.VereinStatus;
import ch.zkmf2024.server.jooq.generated.tables.Zkmf2024User;
import ch.zkmf2024.server.jooq.generated.tables.records.HelperRegistrationRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.ImageRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.JudgeRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.JudgeReportCommentRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.JudgeReportRatingRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.JudgeReportRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.KontaktRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.LocationRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.NewsletterRecipientRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.ProgrammVorgabenRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.SurveyAnswerRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.TimetableEntryRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.TitelRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.VereinCommentRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.VereinDoppeleinsatzRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.VereinProgrammRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.VereinProgrammTitelRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.VereinRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.VereinStatusRecord;
import ch.zkmf2024.server.jooq.generated.tables.records.Zkmf2024UserRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<HelperRegistrationRecord> KEY_HELPER_REGISTRATION_EMAIL = Internal.createUniqueKey(HelperRegistration.HELPER_REGISTRATION, DSL.name("KEY_helper_registration_email"), new TableField[]{HelperRegistration.HELPER_REGISTRATION.EMAIL}, true);
    public static final UniqueKey<HelperRegistrationRecord> KEY_HELPER_REGISTRATION_PRIMARY = Internal.createUniqueKey(HelperRegistration.HELPER_REGISTRATION, DSL.name("KEY_helper_registration_PRIMARY"), new TableField[]{HelperRegistration.HELPER_REGISTRATION.ID}, true);
    public static final UniqueKey<ImageRecord> KEY_IMAGE_PRIMARY = Internal.createUniqueKey(Image.IMAGE, DSL.name("KEY_image_PRIMARY"), new TableField[]{Image.IMAGE.ID}, true);
    public static final UniqueKey<JudgeRecord> KEY_JUDGE_PRIMARY = Internal.createUniqueKey(Judge.JUDGE, DSL.name("KEY_judge_PRIMARY"), new TableField[]{Judge.JUDGE.ID}, true);
    public static final UniqueKey<JudgeRecord> KEY_JUDGE_UQ_JUDGE_EMAIL = Internal.createUniqueKey(Judge.JUDGE, DSL.name("KEY_judge_uq_judge_email"), new TableField[]{Judge.JUDGE.EMAIL}, true);
    public static final UniqueKey<JudgeReportRecord> KEY_JUDGE_REPORT_PRIMARY = Internal.createUniqueKey(JudgeReport.JUDGE_REPORT, DSL.name("KEY_judge_report_PRIMARY"), new TableField[]{JudgeReport.JUDGE_REPORT.ID}, true);
    public static final UniqueKey<JudgeReportRecord> KEY_JUDGE_REPORT_UQ_JUDGE_REPORT = Internal.createUniqueKey(JudgeReport.JUDGE_REPORT, DSL.name("KEY_judge_report_uq_judge_report"), new TableField[]{JudgeReport.JUDGE_REPORT.FK_JUDGE, JudgeReport.JUDGE_REPORT.FK_TIMETABLE_ENTRY}, true);
    public static final UniqueKey<JudgeReportCommentRecord> KEY_JUDGE_REPORT_COMMENT_PRIMARY = Internal.createUniqueKey(JudgeReportComment.JUDGE_REPORT_COMMENT, DSL.name("KEY_judge_report_comment_PRIMARY"), new TableField[]{JudgeReportComment.JUDGE_REPORT_COMMENT.FK_JUDGE_REPORT, JudgeReportComment.JUDGE_REPORT_COMMENT.FK_TITEL}, true);
    public static final UniqueKey<JudgeReportRatingRecord> KEY_JUDGE_REPORT_RATING_PRIMARY = Internal.createUniqueKey(JudgeReportRating.JUDGE_REPORT_RATING, DSL.name("KEY_judge_report_rating_PRIMARY"), new TableField[]{JudgeReportRating.JUDGE_REPORT_RATING.FK_JUDGE_REPORT, JudgeReportRating.JUDGE_REPORT_RATING.FK_TITEL, JudgeReportRating.JUDGE_REPORT_RATING.CATEGORY}, true);
    public static final UniqueKey<KontaktRecord> KEY_KONTAKT_PRIMARY = Internal.createUniqueKey(Kontakt.KONTAKT, DSL.name("KEY_kontakt_PRIMARY"), new TableField[]{Kontakt.KONTAKT.ID}, true);
    public static final UniqueKey<LocationRecord> KEY_LOCATION_PRIMARY = Internal.createUniqueKey(Location.LOCATION, DSL.name("KEY_location_PRIMARY"), new TableField[]{Location.LOCATION.ID}, true);
    public static final UniqueKey<NewsletterRecipientRecord> KEY_NEWSLETTER_RECIPIENT_PRIMARY = Internal.createUniqueKey(NewsletterRecipient.NEWSLETTER_RECIPIENT, DSL.name("KEY_newsletter_recipient_PRIMARY"), new TableField[]{NewsletterRecipient.NEWSLETTER_RECIPIENT.EMAIL}, true);
    public static final UniqueKey<ProgrammVorgabenRecord> KEY_PROGRAMM_VORGABEN_PRIMARY = Internal.createUniqueKey(ProgrammVorgaben.PROGRAMM_VORGABEN, DSL.name("KEY_programm_vorgaben_PRIMARY"), new TableField[]{ProgrammVorgaben.PROGRAMM_VORGABEN.MODUL, ProgrammVorgaben.PROGRAMM_VORGABEN.KLASSE, ProgrammVorgaben.PROGRAMM_VORGABEN.BESETZUNG}, true);
    public static final UniqueKey<SurveyAnswerRecord> KEY_SURVEY_ANSWER_PRIMARY = Internal.createUniqueKey(SurveyAnswer.SURVEY_ANSWER, DSL.name("KEY_survey_answer_PRIMARY"), new TableField[]{SurveyAnswer.SURVEY_ANSWER.ID}, true);
    public static final UniqueKey<TimetableEntryRecord> KEY_TIMETABLE_ENTRY_PRIMARY = Internal.createUniqueKey(TimetableEntry.TIMETABLE_ENTRY, DSL.name("KEY_timetable_entry_PRIMARY"), new TableField[]{TimetableEntry.TIMETABLE_ENTRY.ID}, true);
    public static final UniqueKey<TimetableEntryRecord> KEY_TIMETABLE_ENTRY_UQ_TIMETABLE = Internal.createUniqueKey(TimetableEntry.TIMETABLE_ENTRY, DSL.name("KEY_timetable_entry_uq_timetable"), new TableField[]{TimetableEntry.TIMETABLE_ENTRY.FK_VEREIN}, true);
    public static final UniqueKey<TitelRecord> KEY_TITEL_PRIMARY = Internal.createUniqueKey(Titel.TITEL, DSL.name("KEY_titel_PRIMARY"), new TableField[]{Titel.TITEL.ID}, true);
    public static final UniqueKey<VereinRecord> KEY_VEREIN_PRIMARY = Internal.createUniqueKey(Verein.VEREIN, DSL.name("KEY_verein_PRIMARY"), new TableField[]{Verein.VEREIN.ID}, true);
    public static final UniqueKey<VereinCommentRecord> KEY_VEREIN_COMMENT_PRIMARY = Internal.createUniqueKey(VereinComment.VEREIN_COMMENT, DSL.name("KEY_verein_comment_PRIMARY"), new TableField[]{VereinComment.VEREIN_COMMENT.ID}, true);
    public static final UniqueKey<VereinDoppeleinsatzRecord> KEY_VEREIN_DOPPELEINSATZ_PRIMARY = Internal.createUniqueKey(VereinDoppeleinsatz.VEREIN_DOPPELEINSATZ, DSL.name("KEY_verein_doppeleinsatz_PRIMARY"), new TableField[]{VereinDoppeleinsatz.VEREIN_DOPPELEINSATZ.ID}, true);
    public static final UniqueKey<VereinProgrammRecord> KEY_VEREIN_PROGRAMM_PRIMARY = Internal.createUniqueKey(VereinProgramm.VEREIN_PROGRAMM, DSL.name("KEY_verein_programm_PRIMARY"), new TableField[]{VereinProgramm.VEREIN_PROGRAMM.ID}, true);
    public static final UniqueKey<VereinProgrammTitelRecord> KEY_VEREIN_PROGRAMM_TITEL_PRIMARY = Internal.createUniqueKey(VereinProgrammTitel.VEREIN_PROGRAMM_TITEL, DSL.name("KEY_verein_programm_titel_PRIMARY"), new TableField[]{VereinProgrammTitel.VEREIN_PROGRAMM_TITEL.FK_PROGRAMM, VereinProgrammTitel.VEREIN_PROGRAMM_TITEL.FK_TITEL}, true);
    public static final UniqueKey<VereinProgrammTitelRecord> KEY_VEREIN_PROGRAMM_TITEL_UQ_VEREIN_PROGRAMM_TITEL = Internal.createUniqueKey(VereinProgrammTitel.VEREIN_PROGRAMM_TITEL, DSL.name("KEY_verein_programm_titel_uq_verein_programm_titel"), new TableField[]{VereinProgrammTitel.VEREIN_PROGRAMM_TITEL.FK_PROGRAMM, VereinProgrammTitel.VEREIN_PROGRAMM_TITEL.FK_TITEL, VereinProgrammTitel.VEREIN_PROGRAMM_TITEL.POSITION}, true);
    public static final UniqueKey<VereinStatusRecord> KEY_VEREIN_STATUS_PRIMARY = Internal.createUniqueKey(VereinStatus.VEREIN_STATUS, DSL.name("KEY_verein_status_PRIMARY"), new TableField[]{VereinStatus.VEREIN_STATUS.FK_VEREIN}, true);
    public static final UniqueKey<Zkmf2024UserRecord> KEY_ZKMF2024_USER_PRIMARY = Internal.createUniqueKey(Zkmf2024User.ZKMF2024_USER, DSL.name("KEY_zkmf2024_user_PRIMARY"), new TableField[]{Zkmf2024User.ZKMF2024_USER.EMAIL}, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<JudgeReportRecord, JudgeRecord> FK_JUDGE_REPORT_JUDGE = Internal.createForeignKey(JudgeReport.JUDGE_REPORT, DSL.name("fk_judge_report_judge"), new TableField[]{JudgeReport.JUDGE_REPORT.FK_JUDGE}, Keys.KEY_JUDGE_PRIMARY, new TableField[]{Judge.JUDGE.ID}, true);
    public static final ForeignKey<JudgeReportRecord, TimetableEntryRecord> FK_JUDGE_REPORT_TIMETABLE = Internal.createForeignKey(JudgeReport.JUDGE_REPORT, DSL.name("fk_judge_report_timetable"), new TableField[]{JudgeReport.JUDGE_REPORT.FK_TIMETABLE_ENTRY}, Keys.KEY_TIMETABLE_ENTRY_PRIMARY, new TableField[]{TimetableEntry.TIMETABLE_ENTRY.ID}, true);
    public static final ForeignKey<JudgeReportCommentRecord, JudgeReportRecord> JUDGE_REPORT_COMMENT_REPORT = Internal.createForeignKey(JudgeReportComment.JUDGE_REPORT_COMMENT, DSL.name("judge_report_comment_report"), new TableField[]{JudgeReportComment.JUDGE_REPORT_COMMENT.FK_JUDGE_REPORT}, Keys.KEY_JUDGE_REPORT_PRIMARY, new TableField[]{JudgeReport.JUDGE_REPORT.ID}, true);
    public static final ForeignKey<JudgeReportCommentRecord, TitelRecord> JUDGE_REPORT_COMMENT_TITEL = Internal.createForeignKey(JudgeReportComment.JUDGE_REPORT_COMMENT, DSL.name("judge_report_comment_titel"), new TableField[]{JudgeReportComment.JUDGE_REPORT_COMMENT.FK_TITEL}, Keys.KEY_TITEL_PRIMARY, new TableField[]{Titel.TITEL.ID}, true);
    public static final ForeignKey<JudgeReportRatingRecord, JudgeReportRecord> JUDGE_REPORT_RATING_REPORT = Internal.createForeignKey(JudgeReportRating.JUDGE_REPORT_RATING, DSL.name("judge_report_rating_report"), new TableField[]{JudgeReportRating.JUDGE_REPORT_RATING.FK_JUDGE_REPORT}, Keys.KEY_JUDGE_REPORT_PRIMARY, new TableField[]{JudgeReport.JUDGE_REPORT.ID}, true);
    public static final ForeignKey<JudgeReportRatingRecord, TitelRecord> JUDGE_REPORT_RATING_TITEL = Internal.createForeignKey(JudgeReportRating.JUDGE_REPORT_RATING, DSL.name("judge_report_rating_titel"), new TableField[]{JudgeReportRating.JUDGE_REPORT_RATING.FK_TITEL}, Keys.KEY_TITEL_PRIMARY, new TableField[]{Titel.TITEL.ID}, true);
    public static final ForeignKey<LocationRecord, LocationRecord> FK_LOCATION_EINSPIELLOKAL = Internal.createForeignKey(Location.LOCATION, DSL.name("FK_LOCATION_EINSPIELLOKAL"), new TableField[]{Location.LOCATION.EINSPIELLOKAL_ID}, Keys.KEY_LOCATION_PRIMARY, new TableField[]{Location.LOCATION.ID}, true);
    public static final ForeignKey<LocationRecord, LocationRecord> FK_LOCATION_INSTRUMENTENDEPOT = Internal.createForeignKey(Location.LOCATION, DSL.name("FK_LOCATION_INSTRUMENTENDEPOT"), new TableField[]{Location.LOCATION.INSTRUMENTENDEPOT_ID}, Keys.KEY_LOCATION_PRIMARY, new TableField[]{Location.LOCATION.ID}, true);
    public static final ForeignKey<LocationRecord, LocationRecord> FK_LOCATION_JURYFEEDBACK = Internal.createForeignKey(Location.LOCATION, DSL.name("FK_LOCATION_JURYFEEDBACK"), new TableField[]{Location.LOCATION.JURYFEEDBACK_ID}, Keys.KEY_LOCATION_PRIMARY, new TableField[]{Location.LOCATION.ID}, true);
    public static final ForeignKey<TimetableEntryRecord, LocationRecord> FK_TIMETABLE_LOCATION = Internal.createForeignKey(TimetableEntry.TIMETABLE_ENTRY, DSL.name("fk_timetable_location"), new TableField[]{TimetableEntry.TIMETABLE_ENTRY.FK_LOCATION}, Keys.KEY_LOCATION_PRIMARY, new TableField[]{Location.LOCATION.ID}, true);
    public static final ForeignKey<TimetableEntryRecord, VereinProgrammRecord> FK_TIMETABLE_PROGRAMM = Internal.createForeignKey(TimetableEntry.TIMETABLE_ENTRY, DSL.name("fk_timetable_programm"), new TableField[]{TimetableEntry.TIMETABLE_ENTRY.FK_VEREIN_PROGRAMM}, Keys.KEY_VEREIN_PROGRAMM_PRIMARY, new TableField[]{VereinProgramm.VEREIN_PROGRAMM.ID}, true);
    public static final ForeignKey<TimetableEntryRecord, VereinRecord> FK_TIMETABLE_VEREIN = Internal.createForeignKey(TimetableEntry.TIMETABLE_ENTRY, DSL.name("fk_timetable_verein"), new TableField[]{TimetableEntry.TIMETABLE_ENTRY.FK_VEREIN}, Keys.KEY_VEREIN_PRIMARY, new TableField[]{Verein.VEREIN.ID}, true);
    public static final ForeignKey<TitelRecord, VereinRecord> TITEL_IBFK_1 = Internal.createForeignKey(Titel.TITEL, DSL.name("titel_ibfk_1"), new TableField[]{Titel.TITEL.FK_VEREIN}, Keys.KEY_VEREIN_PRIMARY, new TableField[]{Verein.VEREIN.ID}, true);
    public static final ForeignKey<VereinRecord, KontaktRecord> FK_VEREIN_ON_DIREKTION_KONTAKT = Internal.createForeignKey(Verein.VEREIN, DSL.name("FK_VEREIN_ON_DIREKTION_KONTAKT"), new TableField[]{Verein.VEREIN.DIREKTION_KONTAKT_ID}, Keys.KEY_KONTAKT_PRIMARY, new TableField[]{Kontakt.KONTAKT.ID}, true);
    public static final ForeignKey<VereinRecord, KontaktRecord> FK_VEREIN_ON_PRAESIDENT_KONTAKT = Internal.createForeignKey(Verein.VEREIN, DSL.name("FK_VEREIN_ON_PRAESIDENT_KONTAKT"), new TableField[]{Verein.VEREIN.PRAESIDENT_KONTAKT_ID}, Keys.KEY_KONTAKT_PRIMARY, new TableField[]{Kontakt.KONTAKT.ID}, true);
    public static final ForeignKey<VereinCommentRecord, VereinRecord> VEREIN_COMMENT_IBFK_1 = Internal.createForeignKey(VereinComment.VEREIN_COMMENT, DSL.name("verein_comment_ibfk_1"), new TableField[]{VereinComment.VEREIN_COMMENT.FK_VEREIN}, Keys.KEY_VEREIN_PRIMARY, new TableField[]{Verein.VEREIN.ID}, true);
    public static final ForeignKey<VereinDoppeleinsatzRecord, VereinRecord> VEREIN_DOPPELEINSATZ_IBFK_1 = Internal.createForeignKey(VereinDoppeleinsatz.VEREIN_DOPPELEINSATZ, DSL.name("verein_doppeleinsatz_ibfk_1"), new TableField[]{VereinDoppeleinsatz.VEREIN_DOPPELEINSATZ.FK_VEREIN}, Keys.KEY_VEREIN_PRIMARY, new TableField[]{Verein.VEREIN.ID}, true);
    public static final ForeignKey<VereinDoppeleinsatzRecord, VereinRecord> VEREIN_DOPPELEINSATZ_IBFK_2 = Internal.createForeignKey(VereinDoppeleinsatz.VEREIN_DOPPELEINSATZ, DSL.name("verein_doppeleinsatz_ibfk_2"), new TableField[]{VereinDoppeleinsatz.VEREIN_DOPPELEINSATZ.FK_OTHER_VEREIN}, Keys.KEY_VEREIN_PRIMARY, new TableField[]{Verein.VEREIN.ID}, true);
    public static final ForeignKey<VereinProgrammRecord, VereinRecord> VEREIN_PROGRAMM_IBFK_1 = Internal.createForeignKey(VereinProgramm.VEREIN_PROGRAMM, DSL.name("verein_programm_ibfk_1"), new TableField[]{VereinProgramm.VEREIN_PROGRAMM.FK_VEREIN}, Keys.KEY_VEREIN_PRIMARY, new TableField[]{Verein.VEREIN.ID}, true);
    public static final ForeignKey<VereinProgrammTitelRecord, VereinProgrammRecord> VEREIN_PROGRAMM_TITEL_IBFK_1 = Internal.createForeignKey(VereinProgrammTitel.VEREIN_PROGRAMM_TITEL, DSL.name("verein_programm_titel_ibfk_1"), new TableField[]{VereinProgrammTitel.VEREIN_PROGRAMM_TITEL.FK_PROGRAMM}, Keys.KEY_VEREIN_PROGRAMM_PRIMARY, new TableField[]{VereinProgramm.VEREIN_PROGRAMM.ID}, true);
    public static final ForeignKey<VereinProgrammTitelRecord, TitelRecord> VEREIN_PROGRAMM_TITEL_IBFK_2 = Internal.createForeignKey(VereinProgrammTitel.VEREIN_PROGRAMM_TITEL, DSL.name("verein_programm_titel_ibfk_2"), new TableField[]{VereinProgrammTitel.VEREIN_PROGRAMM_TITEL.FK_TITEL}, Keys.KEY_TITEL_PRIMARY, new TableField[]{Titel.TITEL.ID}, true);
    public static final ForeignKey<VereinStatusRecord, VereinRecord> VEREIN_STATUS_IBFK_1 = Internal.createForeignKey(VereinStatus.VEREIN_STATUS, DSL.name("verein_status_ibfk_1"), new TableField[]{VereinStatus.VEREIN_STATUS.FK_VEREIN}, Keys.KEY_VEREIN_PRIMARY, new TableField[]{Verein.VEREIN.ID}, true);
}
