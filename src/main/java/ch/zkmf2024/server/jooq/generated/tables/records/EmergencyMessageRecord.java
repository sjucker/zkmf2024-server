/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.records;

import ch.zkmf2024.server.jooq.generated.tables.EmergencyMessage;
import ch.zkmf2024.server.jooq.generated.tables.interfaces.IEmergencyMessage;
import ch.zkmf2024.server.jooq.generated.tables.pojos.EmergencyMessagePojo;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class EmergencyMessageRecord extends UpdatableRecordImpl<EmergencyMessageRecord> implements Record4<Long, String, String, Boolean>, IEmergencyMessage {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>emergency_message.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>emergency_message.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>emergency_message.header</code>.
     */
    @Override
    public void setHeader(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>emergency_message.header</code>.
     */
    @Override
    public String getHeader() {
        return (String) get(1);
    }

    /**
     * Setter for <code>emergency_message.message</code>.
     */
    @Override
    public void setMessage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>emergency_message.message</code>.
     */
    @Override
    public String getMessage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>emergency_message.active</code>.
     */
    @Override
    public void setActive(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>emergency_message.active</code>.
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return EmergencyMessage.EMERGENCY_MESSAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return EmergencyMessage.EMERGENCY_MESSAGE.HEADER;
    }

    @Override
    public Field<String> field3() {
        return EmergencyMessage.EMERGENCY_MESSAGE.MESSAGE;
    }

    @Override
    public Field<Boolean> field4() {
        return EmergencyMessage.EMERGENCY_MESSAGE.ACTIVE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getHeader();
    }

    @Override
    public String component3() {
        return getMessage();
    }

    @Override
    public Boolean component4() {
        return getActive();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getHeader();
    }

    @Override
    public String value3() {
        return getMessage();
    }

    @Override
    public Boolean value4() {
        return getActive();
    }

    @Override
    public EmergencyMessageRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EmergencyMessageRecord value2(String value) {
        setHeader(value);
        return this;
    }

    @Override
    public EmergencyMessageRecord value3(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public EmergencyMessageRecord value4(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public EmergencyMessageRecord values(Long value1, String value2, String value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IEmergencyMessage from) {
        setId(from.getId());
        setHeader(from.getHeader());
        setMessage(from.getMessage());
        setActive(from.getActive());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IEmergencyMessage> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmergencyMessageRecord
     */
    public EmergencyMessageRecord() {
        super(EmergencyMessage.EMERGENCY_MESSAGE);
    }

    /**
     * Create a detached, initialised EmergencyMessageRecord
     */
    public EmergencyMessageRecord(Long id, String header, String message, Boolean active) {
        super(EmergencyMessage.EMERGENCY_MESSAGE);

        setId(id);
        setHeader(header);
        setMessage(message);
        setActive(active);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised EmergencyMessageRecord
     */
    public EmergencyMessageRecord(EmergencyMessagePojo value) {
        super(EmergencyMessage.EMERGENCY_MESSAGE);

        if (value != null) {
            setId(value.getId());
            setHeader(value.getHeader());
            setMessage(value.getMessage());
            setActive(value.getActive());
            resetChangedOnNotNull();
        }
    }
}
