/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.records;

import ch.zkmf2024.server.jooq.generated.tables.Screen;
import ch.zkmf2024.server.jooq.generated.tables.interfaces.IScreen;
import ch.zkmf2024.server.jooq.generated.tables.pojos.ScreenPojo;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ScreenRecord extends UpdatableRecordImpl<ScreenRecord> implements IScreen {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>screen.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>screen.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>screen.location_identifier</code>.
     */
    @Override
    public void setLocationIdentifier(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>screen.location_identifier</code>.
     */
    @Override
    public String getLocationIdentifier() {
        return (String) get(1);
    }

    /**
     * Setter for <code>screen.header</code>.
     */
    @Override
    public void setHeader(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>screen.header</code>.
     */
    @Override
    public String getHeader() {
        return (String) get(2);
    }

    /**
     * Setter for <code>screen.message</code>.
     */
    @Override
    public void setMessage(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>screen.message</code>.
     */
    @Override
    public String getMessage() {
        return (String) get(3);
    }

    /**
     * Setter for <code>screen.cloudflare_id</code>.
     */
    @Override
    public void setCloudflareId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>screen.cloudflare_id</code>.
     */
    @Override
    public String getCloudflareId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>screen.active</code>.
     */
    @Override
    public void setActive(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>screen.active</code>.
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IScreen from) {
        setId(from.getId());
        setLocationIdentifier(from.getLocationIdentifier());
        setHeader(from.getHeader());
        setMessage(from.getMessage());
        setCloudflareId(from.getCloudflareId());
        setActive(from.getActive());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IScreen> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScreenRecord
     */
    public ScreenRecord() {
        super(Screen.SCREEN);
    }

    /**
     * Create a detached, initialised ScreenRecord
     */
    public ScreenRecord(Long id, String locationIdentifier, String header, String message, String cloudflareId, Boolean active) {
        super(Screen.SCREEN);

        setId(id);
        setLocationIdentifier(locationIdentifier);
        setHeader(header);
        setMessage(message);
        setCloudflareId(cloudflareId);
        setActive(active);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ScreenRecord
     */
    public ScreenRecord(ScreenPojo value) {
        super(Screen.SCREEN);

        if (value != null) {
            setId(value.getId());
            setLocationIdentifier(value.getLocationIdentifier());
            setHeader(value.getHeader());
            setMessage(value.getMessage());
            setCloudflareId(value.getCloudflareId());
            setActive(value.getActive());
            resetChangedOnNotNull();
        }
    }
}
