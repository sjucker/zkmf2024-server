/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.pojos;

import ch.zkmf2024.server.jooq.generated.enums.UnterhaltungEntryType;
import ch.zkmf2024.server.jooq.generated.tables.interfaces.IUnterhaltungEntry;

import java.time.LocalDate;
import java.time.LocalTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class UnterhaltungEntryPojo implements IUnterhaltungEntry {

    private static final long serialVersionUID = 1L;

    private Long id;
    private UnterhaltungEntryType entryType;
    private LocalDate date;
    private LocalTime startTime;
    private LocalTime endTime;
    private String title;
    private String subtitle;
    private Long fkLocation;
    private String cloudflareId;
    private String text;

    public UnterhaltungEntryPojo() {
    }

    public UnterhaltungEntryPojo(IUnterhaltungEntry value) {
        this.id = value.getId();
        this.entryType = value.getEntryType();
        this.date = value.getDate();
        this.startTime = value.getStartTime();
        this.endTime = value.getEndTime();
        this.title = value.getTitle();
        this.subtitle = value.getSubtitle();
        this.fkLocation = value.getFkLocation();
        this.cloudflareId = value.getCloudflareId();
        this.text = value.getText();
    }

    public UnterhaltungEntryPojo(
            Long id,
            UnterhaltungEntryType entryType,
            LocalDate date,
            LocalTime startTime,
            LocalTime endTime,
            String title,
            String subtitle,
            Long fkLocation,
            String cloudflareId,
            String text
    ) {
        this.id = id;
        this.entryType = entryType;
        this.date = date;
        this.startTime = startTime;
        this.endTime = endTime;
        this.title = title;
        this.subtitle = subtitle;
        this.fkLocation = fkLocation;
        this.cloudflareId = cloudflareId;
        this.text = text;
    }

    /**
     * Getter for <code>unterhaltung_entry.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>unterhaltung_entry.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>unterhaltung_entry.entry_type</code>.
     */
    @Override
    public UnterhaltungEntryType getEntryType() {
        return this.entryType;
    }

    /**
     * Setter for <code>unterhaltung_entry.entry_type</code>.
     */
    @Override
    public void setEntryType(UnterhaltungEntryType entryType) {
        this.entryType = entryType;
    }

    /**
     * Getter for <code>unterhaltung_entry.date</code>.
     */
    @Override
    public LocalDate getDate() {
        return this.date;
    }

    /**
     * Setter for <code>unterhaltung_entry.date</code>.
     */
    @Override
    public void setDate(LocalDate date) {
        this.date = date;
    }

    /**
     * Getter for <code>unterhaltung_entry.start_time</code>.
     */
    @Override
    public LocalTime getStartTime() {
        return this.startTime;
    }

    /**
     * Setter for <code>unterhaltung_entry.start_time</code>.
     */
    @Override
    public void setStartTime(LocalTime startTime) {
        this.startTime = startTime;
    }

    /**
     * Getter for <code>unterhaltung_entry.end_time</code>.
     */
    @Override
    public LocalTime getEndTime() {
        return this.endTime;
    }

    /**
     * Setter for <code>unterhaltung_entry.end_time</code>.
     */
    @Override
    public void setEndTime(LocalTime endTime) {
        this.endTime = endTime;
    }

    /**
     * Getter for <code>unterhaltung_entry.title</code>.
     */
    @Override
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>unterhaltung_entry.title</code>.
     */
    @Override
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for <code>unterhaltung_entry.subtitle</code>.
     */
    @Override
    public String getSubtitle() {
        return this.subtitle;
    }

    /**
     * Setter for <code>unterhaltung_entry.subtitle</code>.
     */
    @Override
    public void setSubtitle(String subtitle) {
        this.subtitle = subtitle;
    }

    /**
     * Getter for <code>unterhaltung_entry.fk_location</code>.
     */
    @Override
    public Long getFkLocation() {
        return this.fkLocation;
    }

    /**
     * Setter for <code>unterhaltung_entry.fk_location</code>.
     */
    @Override
    public void setFkLocation(Long fkLocation) {
        this.fkLocation = fkLocation;
    }

    /**
     * Getter for <code>unterhaltung_entry.cloudflare_id</code>.
     */
    @Override
    public String getCloudflareId() {
        return this.cloudflareId;
    }

    /**
     * Setter for <code>unterhaltung_entry.cloudflare_id</code>.
     */
    @Override
    public void setCloudflareId(String cloudflareId) {
        this.cloudflareId = cloudflareId;
    }

    /**
     * Getter for <code>unterhaltung_entry.text</code>.
     */
    @Override
    public String getText() {
        return this.text;
    }

    /**
     * Setter for <code>unterhaltung_entry.text</code>.
     */
    @Override
    public void setText(String text) {
        this.text = text;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UnterhaltungEntryPojo other = (UnterhaltungEntryPojo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        } else if (!this.id.equals(other.id))
            return false;
        if (this.entryType == null) {
            if (other.entryType != null)
                return false;
        } else if (!this.entryType.equals(other.entryType))
            return false;
        if (this.date == null) {
            if (other.date != null)
                return false;
        } else if (!this.date.equals(other.date))
            return false;
        if (this.startTime == null) {
            if (other.startTime != null)
                return false;
        } else if (!this.startTime.equals(other.startTime))
            return false;
        if (this.endTime == null) {
            if (other.endTime != null)
                return false;
        } else if (!this.endTime.equals(other.endTime))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        } else if (!this.title.equals(other.title))
            return false;
        if (this.subtitle == null) {
            if (other.subtitle != null)
                return false;
        } else if (!this.subtitle.equals(other.subtitle))
            return false;
        if (this.fkLocation == null) {
            if (other.fkLocation != null)
                return false;
        } else if (!this.fkLocation.equals(other.fkLocation))
            return false;
        if (this.cloudflareId == null) {
            if (other.cloudflareId != null)
                return false;
        } else if (!this.cloudflareId.equals(other.cloudflareId))
            return false;
        if (this.text == null) {
            if (other.text != null)
                return false;
        } else if (!this.text.equals(other.text))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.entryType == null) ? 0 : this.entryType.hashCode());
        result = prime * result + ((this.date == null) ? 0 : this.date.hashCode());
        result = prime * result + ((this.startTime == null) ? 0 : this.startTime.hashCode());
        result = prime * result + ((this.endTime == null) ? 0 : this.endTime.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.subtitle == null) ? 0 : this.subtitle.hashCode());
        result = prime * result + ((this.fkLocation == null) ? 0 : this.fkLocation.hashCode());
        result = prime * result + ((this.cloudflareId == null) ? 0 : this.cloudflareId.hashCode());
        result = prime * result + ((this.text == null) ? 0 : this.text.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UnterhaltungEntryPojo (");

        sb.append(id);
        sb.append(", ").append(entryType);
        sb.append(", ").append(date);
        sb.append(", ").append(startTime);
        sb.append(", ").append(endTime);
        sb.append(", ").append(title);
        sb.append(", ").append(subtitle);
        sb.append(", ").append(fkLocation);
        sb.append(", ").append(cloudflareId);
        sb.append(", ").append(text);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUnterhaltungEntry from) {
        setId(from.getId());
        setEntryType(from.getEntryType());
        setDate(from.getDate());
        setStartTime(from.getStartTime());
        setEndTime(from.getEndTime());
        setTitle(from.getTitle());
        setSubtitle(from.getSubtitle());
        setFkLocation(from.getFkLocation());
        setCloudflareId(from.getCloudflareId());
        setText(from.getText());
    }

    @Override
    public <E extends IUnterhaltungEntry> E into(E into) {
        into.from(this);
        return into;
    }
}
