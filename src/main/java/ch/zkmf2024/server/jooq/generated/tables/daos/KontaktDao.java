/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.daos;

import ch.zkmf2024.server.jooq.generated.tables.Kontakt;
import ch.zkmf2024.server.jooq.generated.tables.pojos.KontaktPojo;
import ch.zkmf2024.server.jooq.generated.tables.records.KontaktRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import java.util.List;
import java.util.Optional;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class KontaktDao extends DAOImpl<KontaktRecord, KontaktPojo, Long> {

    /**
     * Create a new KontaktDao without any configuration
     */
    public KontaktDao() {
        super(Kontakt.KONTAKT, KontaktPojo.class);
    }

    /**
     * Create a new KontaktDao with an attached configuration
     */
    public KontaktDao(Configuration configuration) {
        super(Kontakt.KONTAKT, KontaktPojo.class, configuration);
    }

    @Override
    public Long getId(KontaktPojo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KontaktPojo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Kontakt.KONTAKT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<KontaktPojo> fetchById(Long... values) {
        return fetch(Kontakt.KONTAKT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public KontaktPojo fetchOneById(Long value) {
        return fetchOne(Kontakt.KONTAKT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<KontaktPojo> fetchOptionalById(Long value) {
        return fetchOptional(Kontakt.KONTAKT.ID, value);
    }

    /**
     * Fetch records that have <code>vorname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KontaktPojo> fetchRangeOfVorname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Kontakt.KONTAKT.VORNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>vorname IN (values)</code>
     */
    public List<KontaktPojo> fetchByVorname(String... values) {
        return fetch(Kontakt.KONTAKT.VORNAME, values);
    }

    /**
     * Fetch records that have <code>nachname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KontaktPojo> fetchRangeOfNachname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Kontakt.KONTAKT.NACHNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nachname IN (values)</code>
     */
    public List<KontaktPojo> fetchByNachname(String... values) {
        return fetch(Kontakt.KONTAKT.NACHNAME, values);
    }

    /**
     * Fetch records that have <code>adresse BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KontaktPojo> fetchRangeOfAdresse(String lowerInclusive, String upperInclusive) {
        return fetchRange(Kontakt.KONTAKT.ADRESSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>adresse IN (values)</code>
     */
    public List<KontaktPojo> fetchByAdresse(String... values) {
        return fetch(Kontakt.KONTAKT.ADRESSE, values);
    }

    /**
     * Fetch records that have <code>plz BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KontaktPojo> fetchRangeOfPlz(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Kontakt.KONTAKT.PLZ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>plz IN (values)</code>
     */
    public List<KontaktPojo> fetchByPlz(Integer... values) {
        return fetch(Kontakt.KONTAKT.PLZ, values);
    }

    /**
     * Fetch records that have <code>ort BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KontaktPojo> fetchRangeOfOrt(String lowerInclusive, String upperInclusive) {
        return fetchRange(Kontakt.KONTAKT.ORT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ort IN (values)</code>
     */
    public List<KontaktPojo> fetchByOrt(String... values) {
        return fetch(Kontakt.KONTAKT.ORT, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KontaktPojo> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Kontakt.KONTAKT.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<KontaktPojo> fetchByEmail(String... values) {
        return fetch(Kontakt.KONTAKT.EMAIL, values);
    }

    /**
     * Fetch records that have <code>telefon_privat BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KontaktPojo> fetchRangeOfTelefonPrivat(String lowerInclusive, String upperInclusive) {
        return fetchRange(Kontakt.KONTAKT.TELEFON_PRIVAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>telefon_privat IN (values)</code>
     */
    public List<KontaktPojo> fetchByTelefonPrivat(String... values) {
        return fetch(Kontakt.KONTAKT.TELEFON_PRIVAT, values);
    }

    /**
     * Fetch records that have <code>telefon_mobile BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<KontaktPojo> fetchRangeOfTelefonMobile(String lowerInclusive, String upperInclusive) {
        return fetchRange(Kontakt.KONTAKT.TELEFON_MOBILE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>telefon_mobile IN (values)</code>
     */
    public List<KontaktPojo> fetchByTelefonMobile(String... values) {
        return fetch(Kontakt.KONTAKT.TELEFON_MOBILE, values);
    }
}
