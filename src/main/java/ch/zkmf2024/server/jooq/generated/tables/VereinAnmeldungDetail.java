/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables;

import ch.zkmf2024.server.jooq.generated.DefaultSchema;
import ch.zkmf2024.server.jooq.generated.Keys;
import ch.zkmf2024.server.jooq.generated.tables.records.VereinAnmeldungDetailRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class VereinAnmeldungDetail extends TableImpl<VereinAnmeldungDetailRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>verein_anmeldung_detail</code>
     */
    public static final VereinAnmeldungDetail VEREIN_ANMELDUNG_DETAIL = new VereinAnmeldungDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VereinAnmeldungDetailRecord> getRecordType() {
        return VereinAnmeldungDetailRecord.class;
    }

    /**
     * The column <code>verein_anmeldung_detail.id</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>verein_anmeldung_detail.fk_verein</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Long> FK_VEREIN = createField(DSL.name("fk_verein"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>verein_anmeldung_detail.festfuehrer_amount</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Integer> FESTFUEHRER_AMOUNT = createField(DSL.name("festfuehrer_amount"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>verein_anmeldung_detail.festkarten_musiker_amount</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Integer> FESTKARTEN_MUSIKER_AMOUNT = createField(DSL.name("festkarten_musiker_amount"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>verein_anmeldung_detail.festkarten_begleiter_amount</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Integer> FESTKARTEN_BEGLEITER_AMOUNT = createField(DSL.name("festkarten_begleiter_amount"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>verein_anmeldung_detail.freitagabend_amount</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Integer> FREITAGABEND_AMOUNT = createField(DSL.name("freitagabend_amount"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>verein_anmeldung_detail.gehbehinderung</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Boolean> GEHBEHINDERUNG = createField(DSL.name("gehbehinderung"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field(DSL.raw("false"), SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>verein_anmeldung_detail.partituren_sent</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Boolean> PARTITUREN_SENT = createField(DSL.name("partituren_sent"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field(DSL.raw("false"), SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>verein_anmeldung_detail.partituren_sent_at</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, LocalDate> PARTITUREN_SENT_AT = createField(DSL.name("partituren_sent_at"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>verein_anmeldung_detail.gesamtchor</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Boolean> GESAMTCHOR = createField(DSL.name("gesamtchor"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field(DSL.raw("false"), SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>verein_anmeldung_detail.adhoc_orchester</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Boolean> ADHOC_ORCHESTER = createField(DSL.name("adhoc_orchester"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field(DSL.raw("false"), SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>verein_anmeldung_detail.anreise_public_transport</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Boolean> ANREISE_PUBLIC_TRANSPORT = createField(DSL.name("anreise_public_transport"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field(DSL.raw("false"), SQLDataType.BOOLEAN)), this, "");

    /**
     * The column
     * <code>verein_anmeldung_detail.anreise_public_transport_type</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, String> ANREISE_PUBLIC_TRANSPORT_TYPE = createField(DSL.name("anreise_public_transport_type"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>verein_anmeldung_detail.anreise_otherwise</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, String> ANREISE_OTHERWISE = createField(DSL.name("anreise_otherwise"), SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>verein_anmeldung_detail.verpflegung_meat</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Integer> VERPFLEGUNG_MEAT = createField(DSL.name("verpflegung_meat"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>verein_anmeldung_detail.verpflegung_vegan</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Integer> VERPFLEGUNG_VEGAN = createField(DSL.name("verpflegung_vegan"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>verein_anmeldung_detail.verpflegung_allergies</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Integer> VERPFLEGUNG_ALLERGIES = createField(DSL.name("verpflegung_allergies"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>verein_anmeldung_detail.verpflegung_none</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Integer> VERPFLEGUNG_NONE = createField(DSL.name("verpflegung_none"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>verein_anmeldung_detail.verpflegung_helper_1</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, String> VERPFLEGUNG_HELPER_1 = createField(DSL.name("verpflegung_helper_1"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>verein_anmeldung_detail.verpflegung_helper_2</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, String> VERPFLEGUNG_HELPER_2 = createField(DSL.name("verpflegung_helper_2"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>verein_anmeldung_detail.verpflegung_helper_3</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, String> VERPFLEGUNG_HELPER_3 = createField(DSL.name("verpflegung_helper_3"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>verein_anmeldung_detail.verpflegung_helper_4</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, String> VERPFLEGUNG_HELPER_4 = createField(DSL.name("verpflegung_helper_4"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>verein_anmeldung_detail.verpflegung_helper_5</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, String> VERPFLEGUNG_HELPER_5 = createField(DSL.name("verpflegung_helper_5"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>verein_anmeldung_detail.verpflegung_helper_6</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, String> VERPFLEGUNG_HELPER_6 = createField(DSL.name("verpflegung_helper_6"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>verein_anmeldung_detail.stage_setup</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, JSONB> STAGE_SETUP = createField(DSL.name("stage_setup"), SQLDataType.JSONB, this, "");

    /**
     * The column <code>verein_anmeldung_detail.stage_dirigentenpodest</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Boolean> STAGE_DIRIGENTENPODEST = createField(DSL.name("stage_dirigentenpodest"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field(DSL.raw("false"), SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>verein_anmeldung_detail.stage_ablagen_amount</code>.
     */
    public final TableField<VereinAnmeldungDetailRecord, Integer> STAGE_ABLAGEN_AMOUNT = createField(DSL.name("stage_ablagen_amount"), SQLDataType.INTEGER, this, "");

    private VereinAnmeldungDetail(Name alias, Table<VereinAnmeldungDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private VereinAnmeldungDetail(Name alias, Table<VereinAnmeldungDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>verein_anmeldung_detail</code> table reference
     */
    public VereinAnmeldungDetail(String alias) {
        this(DSL.name(alias), VEREIN_ANMELDUNG_DETAIL);
    }

    /**
     * Create an aliased <code>verein_anmeldung_detail</code> table reference
     */
    public VereinAnmeldungDetail(Name alias) {
        this(alias, VEREIN_ANMELDUNG_DETAIL);
    }

    /**
     * Create a <code>verein_anmeldung_detail</code> table reference
     */
    public VereinAnmeldungDetail() {
        this(DSL.name("verein_anmeldung_detail"), null);
    }

    public <O extends Record> VereinAnmeldungDetail(Table<O> child, ForeignKey<O, VereinAnmeldungDetailRecord> key) {
        super(child, key, VEREIN_ANMELDUNG_DETAIL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<VereinAnmeldungDetailRecord, Long> getIdentity() {
        return (Identity<VereinAnmeldungDetailRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<VereinAnmeldungDetailRecord> getPrimaryKey() {
        return Keys.PK_VEREIN_ANMELDUNG_DETAIL;
    }

    @Override
    public List<ForeignKey<VereinAnmeldungDetailRecord, ?>> getReferences() {
        return Arrays.asList(Keys.VEREIN_ANMELDUNG_DETAIL__FK_VEREIN_ANMELDUNG_DETAIL_VEREIN);
    }

    private transient Verein _verein;

    /**
     * Get the implicit join path to the <code>public.verein</code> table.
     */
    public Verein verein() {
        if (_verein == null)
            _verein = new Verein(this, Keys.VEREIN_ANMELDUNG_DETAIL__FK_VEREIN_ANMELDUNG_DETAIL_VEREIN);

        return _verein;
    }

    @Override
    public VereinAnmeldungDetail as(String alias) {
        return new VereinAnmeldungDetail(DSL.name(alias), this);
    }

    @Override
    public VereinAnmeldungDetail as(Name alias) {
        return new VereinAnmeldungDetail(alias, this);
    }

    @Override
    public VereinAnmeldungDetail as(Table<?> alias) {
        return new VereinAnmeldungDetail(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public VereinAnmeldungDetail rename(String name) {
        return new VereinAnmeldungDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VereinAnmeldungDetail rename(Name name) {
        return new VereinAnmeldungDetail(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public VereinAnmeldungDetail rename(Table<?> name) {
        return new VereinAnmeldungDetail(name.getQualifiedName(), null);
    }
}
