/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.daos;

import ch.zkmf2024.server.jooq.generated.tables.ProgrammVorgaben;
import ch.zkmf2024.server.jooq.generated.tables.pojos.ProgrammVorgabenPojo;
import ch.zkmf2024.server.jooq.generated.tables.records.ProgrammVorgabenRecord;
import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;

import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class ProgrammVorgabenDao extends DAOImpl<ProgrammVorgabenRecord, ProgrammVorgabenPojo, Record3<String, String, String>> {

    /**
     * Create a new ProgrammVorgabenDao without any configuration
     */
    public ProgrammVorgabenDao() {
        super(ProgrammVorgaben.PROGRAMM_VORGABEN, ProgrammVorgabenPojo.class);
    }

    /**
     * Create a new ProgrammVorgabenDao with an attached configuration
     */
    public ProgrammVorgabenDao(Configuration configuration) {
        super(ProgrammVorgaben.PROGRAMM_VORGABEN, ProgrammVorgabenPojo.class, configuration);
    }

    @Override
    public Record3<String, String, String> getId(ProgrammVorgabenPojo object) {
        return compositeKeyRecord(object.getModul(), object.getKlasse(), object.getBesetzung());
    }

    /**
     * Fetch records that have <code>modul BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ProgrammVorgabenPojo> fetchRangeOfModul(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProgrammVorgaben.PROGRAMM_VORGABEN.MODUL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modul IN (values)</code>
     */
    public List<ProgrammVorgabenPojo> fetchByModul(String... values) {
        return fetch(ProgrammVorgaben.PROGRAMM_VORGABEN.MODUL, values);
    }

    /**
     * Fetch records that have <code>klasse BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ProgrammVorgabenPojo> fetchRangeOfKlasse(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProgrammVorgaben.PROGRAMM_VORGABEN.KLASSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>klasse IN (values)</code>
     */
    public List<ProgrammVorgabenPojo> fetchByKlasse(String... values) {
        return fetch(ProgrammVorgaben.PROGRAMM_VORGABEN.KLASSE, values);
    }

    /**
     * Fetch records that have <code>besetzung BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ProgrammVorgabenPojo> fetchRangeOfBesetzung(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProgrammVorgaben.PROGRAMM_VORGABEN.BESETZUNG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>besetzung IN (values)</code>
     */
    public List<ProgrammVorgabenPojo> fetchByBesetzung(String... values) {
        return fetch(ProgrammVorgaben.PROGRAMM_VORGABEN.BESETZUNG, values);
    }

    /**
     * Fetch records that have <code>min_duration_in_seconds BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<ProgrammVorgabenPojo> fetchRangeOfMinDurationInSeconds(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProgrammVorgaben.PROGRAMM_VORGABEN.MIN_DURATION_IN_SECONDS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>min_duration_in_seconds IN (values)</code>
     */
    public List<ProgrammVorgabenPojo> fetchByMinDurationInSeconds(Integer... values) {
        return fetch(ProgrammVorgaben.PROGRAMM_VORGABEN.MIN_DURATION_IN_SECONDS, values);
    }

    /**
     * Fetch records that have <code>max_duration_in_seconds BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<ProgrammVorgabenPojo> fetchRangeOfMaxDurationInSeconds(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProgrammVorgaben.PROGRAMM_VORGABEN.MAX_DURATION_IN_SECONDS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_duration_in_seconds IN (values)</code>
     */
    public List<ProgrammVorgabenPojo> fetchByMaxDurationInSeconds(Integer... values) {
        return fetch(ProgrammVorgaben.PROGRAMM_VORGABEN.MAX_DURATION_IN_SECONDS, values);
    }
}
