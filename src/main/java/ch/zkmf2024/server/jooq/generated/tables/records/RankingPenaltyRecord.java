/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.records;

import ch.zkmf2024.server.jooq.generated.tables.RankingPenalty;
import ch.zkmf2024.server.jooq.generated.tables.interfaces.IRankingPenalty;
import ch.zkmf2024.server.jooq.generated.tables.pojos.RankingPenaltyPojo;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class RankingPenaltyRecord extends UpdatableRecordImpl<RankingPenaltyRecord> implements IRankingPenalty {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ranking_penalty.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>ranking_penalty.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ranking_penalty.fk_timetable_entry</code>.
     */
    @Override
    public void setFkTimetableEntry(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>ranking_penalty.fk_timetable_entry</code>.
     */
    @Override
    public Long getFkTimetableEntry() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>ranking_penalty.minutes_overrun</code>.
     */
    @Override
    public void setMinutesOverrun(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>ranking_penalty.minutes_overrun</code>.
     */
    @Override
    public Integer getMinutesOverrun() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRankingPenalty from) {
        setId(from.getId());
        setFkTimetableEntry(from.getFkTimetableEntry());
        setMinutesOverrun(from.getMinutesOverrun());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IRankingPenalty> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RankingPenaltyRecord
     */
    public RankingPenaltyRecord() {
        super(RankingPenalty.RANKING_PENALTY);
    }

    /**
     * Create a detached, initialised RankingPenaltyRecord
     */
    public RankingPenaltyRecord(Long id, Long fkTimetableEntry, Integer minutesOverrun) {
        super(RankingPenalty.RANKING_PENALTY);

        setId(id);
        setFkTimetableEntry(fkTimetableEntry);
        setMinutesOverrun(minutesOverrun);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RankingPenaltyRecord
     */
    public RankingPenaltyRecord(RankingPenaltyPojo value) {
        super(RankingPenalty.RANKING_PENALTY);

        if (value != null) {
            setId(value.getId());
            setFkTimetableEntry(value.getFkTimetableEntry());
            setMinutesOverrun(value.getMinutesOverrun());
            resetChangedOnNotNull();
        }
    }
}
