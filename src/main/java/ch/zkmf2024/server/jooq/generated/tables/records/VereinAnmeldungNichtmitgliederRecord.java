/*
 * This file is generated by jOOQ.
 */
package ch.zkmf2024.server.jooq.generated.tables.records;

import ch.zkmf2024.server.jooq.generated.tables.VereinAnmeldungNichtmitglieder;
import ch.zkmf2024.server.jooq.generated.tables.interfaces.IVereinAnmeldungNichtmitglieder;
import ch.zkmf2024.server.jooq.generated.tables.pojos.VereinAnmeldungNichtmitgliederPojo;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class VereinAnmeldungNichtmitgliederRecord extends UpdatableRecordImpl<VereinAnmeldungNichtmitgliederRecord> implements IVereinAnmeldungNichtmitglieder {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>verein_anmeldung_nichtmitglieder.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>verein_anmeldung_nichtmitglieder.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>verein_anmeldung_nichtmitglieder.fk_verein</code>.
     */
    @Override
    public void setFkVerein(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>verein_anmeldung_nichtmitglieder.fk_verein</code>.
     */
    @Override
    public Long getFkVerein() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>verein_anmeldung_nichtmitglieder.amount</code>.
     */
    @Override
    public void setAmount(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>verein_anmeldung_nichtmitglieder.amount</code>.
     */
    @Override
    public Integer getAmount() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>verein_anmeldung_nichtmitglieder.instrument</code>.
     */
    @Override
    public void setInstrument(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>verein_anmeldung_nichtmitglieder.instrument</code>.
     */
    @Override
    public String getInstrument() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IVereinAnmeldungNichtmitglieder from) {
        setId(from.getId());
        setFkVerein(from.getFkVerein());
        setAmount(from.getAmount());
        setInstrument(from.getInstrument());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IVereinAnmeldungNichtmitglieder> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VereinAnmeldungNichtmitgliederRecord
     */
    public VereinAnmeldungNichtmitgliederRecord() {
        super(VereinAnmeldungNichtmitglieder.VEREIN_ANMELDUNG_NICHTMITGLIEDER);
    }

    /**
     * Create a detached, initialised VereinAnmeldungNichtmitgliederRecord
     */
    public VereinAnmeldungNichtmitgliederRecord(Long id, Long fkVerein, Integer amount, String instrument) {
        super(VereinAnmeldungNichtmitglieder.VEREIN_ANMELDUNG_NICHTMITGLIEDER);

        setId(id);
        setFkVerein(fkVerein);
        setAmount(amount);
        setInstrument(instrument);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised VereinAnmeldungNichtmitgliederRecord
     */
    public VereinAnmeldungNichtmitgliederRecord(VereinAnmeldungNichtmitgliederPojo value) {
        super(VereinAnmeldungNichtmitglieder.VEREIN_ANMELDUNG_NICHTMITGLIEDER);

        if (value != null) {
            setId(value.getId());
            setFkVerein(value.getFkVerein());
            setAmount(value.getAmount());
            setInstrument(value.getInstrument());
            resetChangedOnNotNull();
        }
    }
}
